{"remainingRequest":"C:\\Users\\windows\\project\\ihrm\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\windows\\project\\ihrm\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\windows\\project\\ihrm\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\windows\\project\\ihrm\\src\\views\\employees\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\windows\\project\\ihrm\\src\\views\\employees\\index.vue","mtime":1617158999413},{"path":"C:\\Users\\windows\\project\\ihrm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\project\\ihrm\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\windows\\project\\ihrm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\project\\ihrm\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"app-container\">\r\n      <pageTools :show-before=\"true\">\r\n        <template v-slot:before>\r\n          <span slot='before'>总共{{page.total}}条记录</span>\r\n        </template>\r\n\r\n        <template v-slot:after>\r\n          <el-button size=\"middle\" type=\"success\" @click=\"$router.push('/import')\">导入</el-button>\r\n          <el-button size=\"middle\" type=\"danger\" @click=\"exportDate\">导出</el-button>\r\n          <el-button size=\"middle\" type=\"primary\" @click=\"showDialog = true\">新增员工</el-button>\r\n        </template>\r\n      </pageTools>\r\n      <!-- 放置表格组件 -->\r\n      <el-card>\r\n        <el-table border v-loading=\"loding\" :data=list>\r\n          <el-table-column type=\"index\" label=\"序号\" sortable=\"\" align=\"center\"/>\r\n          <el-table-column label=\"姓名\" sortable=\"\" align=\"center\" prop=\"username\"/>\r\n          <el-table-column label=\"工号\" sortable=\"\" align=\"center\" prop=\"id\"/>\r\n          <el-table-column label=\"聘用形式\" sortable=\"\" align=\"center\" prop=\"formOfEmployment\" :formatter=\"fomatEmployment\"/>\r\n          <el-table-column label=\"部门\" sortable=\"\" align=\"center\" prop=\"departmentName\"/>\r\n          <el-table-column label=\"入职时间\" sortable=\"\" align=\"center\" >\r\n            <template slot-scope=\"scoped\">\r\n              {{scoped.row.timeOfEntry | formatDate}}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"账户状态\" sortable=\"\" align=\"center\" prop=\"enableState\">\r\n            <template slot-scope=\"scoped\">\r\n              <el-switch :value=\"scoped.row.enableState === 1\" active-color=\"#13ce66\" inactive-color=\"#ff4949\">\r\n              </el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" sortable=\"\" fixed=\"right\" width=\"280\" align=\"center\">\r\n            <template slot-scope=\"scoped\">\r\n              <el-button type=\"text\" size=\"small\" @click=\"to(scoped.row.id)\">查看</el-button>\r\n              <el-button type=\"text\" size=\"small\">转正</el-button>\r\n              <el-button type=\"text\" size=\"small\">调岗</el-button>\r\n              <el-button type=\"text\" size=\"small\">离职</el-button>\r\n              <el-button type=\"text\" size=\"small\" @click=\"editRole(scoped.row.id)\">角色</el-button>\r\n              <el-button type=\"text\" size=\"small\" @click=\"deleteEmployee(scoped.row.id)\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!-- 分页组件 -->\r\n        <el-row type=\"flex\" justify=\"center\" align=\"middle\" style=\"height: 60px\">\r\n          <el-pagination layout=\"prev, pager, next\" :total=\"page.total\" :page-size=\"page.size\" :current-page=\"page.page\" @current-change=\"changePage\"/>\r\n        </el-row>\r\n        <!-- /分页组件 -->\r\n      </el-card>\r\n      <!-- 放置表格组件 -->\r\n    </div>\r\n    <!-- 放置弹层 -->\r\n    <addEmployee :showDialog.sync=\"showDialog\"></addEmployee>\r\n    <!-- /放置弹层 -->\r\n    <!-- 角色分配 -->\r\n    <AssignRole :showRoleDialog.sync=\"showRoleDialog\" :user-id=\"UserId\" ref=\"assignRef\"></AssignRole>\r\n    <!-- /角色分配 -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {getEmployeesLists,deleteEmployee} from '@/api/employees'\r\nimport EmployeeEnum from '@/api/constant/employees'\r\nimport addEmployee from \"./components/add-employee\"\r\nimport { formatDate, formatTime } from '@/filters'\r\nimport AssignRole from './components/assign-role'\r\nexport default {\r\n  data() {\r\n    return {\r\n      page:{\r\n        page:1,\r\n        size:10,\r\n        total:0,\r\n      },\r\n      loding: false,\r\n      list :[],\r\n      showDialog: false,\r\n      showRoleDialog : false,\r\n      UserId: null\r\n    }\r\n  },\r\n  components: {\r\n    addEmployee,\r\n    AssignRole\r\n  },\r\n  created() {\r\n    this.getEmployeesLists()\r\n  },\r\n  methods: {\r\n    async getEmployeesLists() {\r\n      this.loding = true\r\n      const {total,rows} = await getEmployeesLists(this.page)\r\n      this.list = rows\r\n      this.page.total = total\r\n      this.loding = false\r\n    },\r\n    /* 分页操作 */\r\n    changePage(newPage) {\r\n      this.page.page = newPage\r\n      this.getEmployeesLists()\r\n    },\r\n    /* 格式化聘用字段 */\r\n    fomatEmployment(row,column,cellValue,index) {\r\n      const obj = EmployeeEnum.hireType.find(item => item.id == cellValue)\r\n      return obj ? obj.value : '未知'\r\n    },\r\n    /* 删除员工 */\r\n    deleteEmployee(id) {\r\n      this.$confirm('此操作将永久删除该员工, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(async () => {\r\n          await deleteEmployee(id)\r\n          this.$message({\r\n            type: 'success',\r\n            message: '删除成功!'\r\n          });\r\n          this.getEmployeesLists()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          });          \r\n      });\r\n    },\r\n    /* 导出员工数据 */\r\n    exportDate () {\r\n      import(\"@/vendor/Export2Excel\").then(async excel => {\r\n        const {rows} = await getEmployeesLists({page:1,size: this.page.total})\r\n\r\n        var headers = {\r\n          '手机号': 'mobile',\r\n          '姓名': 'username',\r\n          '入职日期': 'timeOfEntry',\r\n          '聘用形式': 'formOfEmployment',\r\n          '转正日期': 'correctionTime',\r\n          '工号': 'workNumber',\r\n          '部门': 'departmentName'\r\n        }\r\n        const data = this.formatJson(headers,rows)\r\n        excel.export_json_to_excel({  \r\n          header: Object.keys(headers),\r\n          data: data,\r\n          filename:'员工工资表'\r\n        })\r\n      })\r\n    },\r\n    /* 格式化数据 */\r\n    formatJson(headers,rows) {\r\n      return rows.map(item => {\r\n        return Object.keys(headers).map( key => {\r\n          if (headers[key] && (headers[key] == 'timeOfEntry' || headers[key] == 'correctionTime')) {\r\n            return formatDate(item[headers[key]])\r\n          } else if (headers[key] == 'formOfEmployment') {\r\n            const flag = EmployeeEnum.hireType.find(obj => {\r\n              return obj.id == item[headers[key]]\r\n            })\r\n            return flag? flag.value : '未知'\r\n          } \r\n          return item[headers[key]]\r\n        })\r\n      })\r\n    },\r\n    /* 路由跳转 */\r\n    to (id) {\r\n      this.$router.push(`/employees/detail/${id}`)\r\n    },\r\n    /* 角色分配 */\r\n    async editRole (id) {\r\n      this.UserId = id\r\n      await this.$refs.assignRef.getUserDetailById(id)\r\n      this.showRoleDialog = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":"src/views/employees"}]}