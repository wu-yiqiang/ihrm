{"remainingRequest":"C:\\Users\\windows\\Project\\ihrm\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\windows\\Project\\ihrm\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\windows\\Project\\ihrm\\src\\permission.js","dependencies":[{"path":"C:\\Users\\windows\\Project\\ihrm\\src\\permission.js","mtime":1615893982464},{"path":"C:\\Users\\windows\\Project\\ihrm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\Project\\ihrm\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\windows\\Project\\ihrm\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gaW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcicKLy8gaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnCi8vIGltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJwovLyBpbXBvcnQgTlByb2dyZXNzIGZyb20gJ25wcm9ncmVzcycgLy8gcHJvZ3Jlc3MgYmFyCi8vIGltcG9ydCAnbnByb2dyZXNzL25wcm9ncmVzcy5jc3MnIC8vIHByb2dyZXNzIGJhciBzdHlsZQovLyBpbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCcgLy8gZ2V0IHRva2VuIGZyb20gY29va2llCi8vIGltcG9ydCBnZXRQYWdlVGl0bGUgZnJvbSAnQC91dGlscy9nZXQtcGFnZS10aXRsZScKLy8gTlByb2dyZXNzLmNvbmZpZ3VyZSh7IHNob3dTcGlubmVyOiBmYWxzZSB9KSAvLyBOUHJvZ3Jlc3MgQ29uZmlndXJhdGlvbgovLyBjb25zdCB3aGl0ZUxpc3QgPSBbJy9sb2dpbicsICcvYXV0aC1yZWRpcmVjdCddIC8vIG5vIHJlZGlyZWN0IHdoaXRlbGlzdAovLyByb3V0ZXIuYmVmb3JlRWFjaChhc3luYyh0bywgZnJvbSwgbmV4dCkgPT4gewovLyAgIC8vIHN0YXJ0IHByb2dyZXNzIGJhcgovLyAgIE5Qcm9ncmVzcy5zdGFydCgpCi8vICAgLy8gc2V0IHBhZ2UgdGl0bGUKLy8gICBkb2N1bWVudC50aXRsZSA9IGdldFBhZ2VUaXRsZSh0by5tZXRhLnRpdGxlKQovLyAgIC8vIGRldGVybWluZSB3aGV0aGVyIHRoZSB1c2VyIGhhcyBsb2dnZWQgaW4KLy8gICBjb25zdCBoYXNUb2tlbiA9IGdldFRva2VuKCkKLy8gICBpZiAoaGFzVG9rZW4pIHsKLy8gICAgIGlmICh0by5wYXRoID09PSAnL2xvZ2luJykgewovLyAgICAgICAvLyBpZiBpcyBsb2dnZWQgaW4sIHJlZGlyZWN0IHRvIHRoZSBob21lIHBhZ2UKLy8gICAgICAgbmV4dCh7IHBhdGg6ICcvJyB9KQovLyAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpIC8vIGhhY2s6IGh0dHBzOi8vZ2l0aHViLmNvbS9QYW5KaWFDaGVuL3Z1ZS1lbGVtZW50LWFkbWluL3B1bGwvMjkzOQovLyAgICAgfSBlbHNlIHsKLy8gICAgICAgLy8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHVzZXIgaGFzIG9idGFpbmVkIGhpcyBwZXJtaXNzaW9uIHJvbGVzIHRocm91Z2ggZ2V0SW5mbwovLyAgICAgICBjb25zdCBoYXNSb2xlcyA9IHN0b3JlLmdldHRlcnMucm9sZXMgJiYgc3RvcmUuZ2V0dGVycy5yb2xlcy5sZW5ndGggPiAwCi8vICAgICAgIGlmIChoYXNSb2xlcykgewovLyAgICAgICAgIG5leHQoKQovLyAgICAgICB9IGVsc2UgewovLyAgICAgICAgIHRyeSB7Ci8vICAgICAgICAgICAvLyBnZXQgdXNlciBpbmZvCi8vICAgICAgICAgICAvLyBub3RlOiByb2xlcyBtdXN0IGJlIGEgb2JqZWN0IGFycmF5ISBzdWNoIGFzOiBbJ2FkbWluJ10gb3IgLFsnZGV2ZWxvcGVyJywnZWRpdG9yJ10KLy8gICAgICAgICAgIGNvbnN0IHsgcm9sZXMgfSA9IGF3YWl0IHN0b3JlLmRpc3BhdGNoKCd1c2VyL2dldEluZm8nKQovLyAgICAgICAgICAgLy8gZ2VuZXJhdGUgYWNjZXNzaWJsZSByb3V0ZXMgbWFwIGJhc2VkIG9uIHJvbGVzCi8vICAgICAgICAgICBjb25zdCBhY2Nlc3NSb3V0ZXMgPSBhd2FpdCBzdG9yZS5kaXNwYXRjaCgncGVybWlzc2lvbi9nZW5lcmF0ZVJvdXRlcycsIHJvbGVzKQovLyAgICAgICAgICAgLy8gZHluYW1pY2FsbHkgYWRkIGFjY2Vzc2libGUgcm91dGVzCi8vICAgICAgICAgICByb3V0ZXIuYWRkUm91dGVzKGFjY2Vzc1JvdXRlcykKLy8gICAgICAgICAgIC8vIGhhY2sgbWV0aG9kIHRvIGVuc3VyZSB0aGF0IGFkZFJvdXRlcyBpcyBjb21wbGV0ZQovLyAgICAgICAgICAgLy8gc2V0IHRoZSByZXBsYWNlOiB0cnVlLCBzbyB0aGUgbmF2aWdhdGlvbiB3aWxsIG5vdCBsZWF2ZSBhIGhpc3RvcnkgcmVjb3JkCi8vICAgICAgICAgICBuZXh0KHsgLi4udG8sIHJlcGxhY2U6IHRydWUgfSkKLy8gICAgICAgICB9IGNhdGNoIChlcnJvcikgewovLyAgICAgICAgICAgLy8gcmVtb3ZlIHRva2VuIGFuZCBnbyB0byBsb2dpbiBwYWdlIHRvIHJlLWxvZ2luCi8vICAgICAgICAgICBhd2FpdCBzdG9yZS5kaXNwYXRjaCgndXNlci9yZXNldFRva2VuJykKLy8gICAgICAgICAgIE1lc3NhZ2UuZXJyb3IoZXJyb3IgfHwgJ0hhcyBFcnJvcicpCi8vICAgICAgICAgICBuZXh0KGAvbG9naW4/cmVkaXJlY3Q9JHt0by5wYXRofWApCi8vICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpCi8vICAgICAgICAgfQovLyAgICAgICB9Ci8vICAgICB9Ci8vICAgfSBlbHNlIHsKLy8gICAgIC8qIGhhcyBubyB0b2tlbiovCi8vICAgICBpZiAod2hpdGVMaXN0LmluZGV4T2YodG8ucGF0aCkgIT09IC0xKSB7Ci8vICAgICAgIC8vIGluIHRoZSBmcmVlIGxvZ2luIHdoaXRlbGlzdCwgZ28gZGlyZWN0bHkKLy8gICAgICAgbmV4dCgpCi8vICAgICB9IGVsc2UgewovLyAgICAgICAvLyBvdGhlciBwYWdlcyB0aGF0IGRvIG5vdCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIGFyZSByZWRpcmVjdGVkIHRvIHRoZSBsb2dpbiBwYWdlLgovLyAgICAgICBuZXh0KGAvbG9naW4/cmVkaXJlY3Q9JHt0by5wYXRofWApCi8vICAgICAgIE5Qcm9ncmVzcy5kb25lKCkKLy8gICAgIH0KLy8gICB9Ci8vIH0pCi8vIHJvdXRlci5hZnRlckVhY2goKCkgPT4gewovLyAgIC8vIGZpbmlzaCBwcm9ncmVzcyBiYXIKLy8gICBOUHJvZ3Jlc3MuZG9uZSgpCi8vIH0p"},{"version":3,"sources":["C:/Users/windows/Project/ihrm/src/permission.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import router from './router'\n// import store from './store'\n// import { Message } from 'element-ui'\n// import NProgress from 'nprogress' // progress bar\n// import 'nprogress/nprogress.css' // progress bar style\n// import { getToken } from '@/utils/auth' // get token from cookie\n// import getPageTitle from '@/utils/get-page-title'\n\n// NProgress.configure({ showSpinner: false }) // NProgress Configuration\n\n// const whiteList = ['/login', '/auth-redirect'] // no redirect whitelist\n\n// router.beforeEach(async(to, from, next) => {\n//   // start progress bar\n//   NProgress.start()\n\n//   // set page title\n//   document.title = getPageTitle(to.meta.title)\n\n//   // determine whether the user has logged in\n//   const hasToken = getToken()\n\n//   if (hasToken) {\n//     if (to.path === '/login') {\n//       // if is logged in, redirect to the home page\n//       next({ path: '/' })\n//       NProgress.done() // hack: https://github.com/PanJiaChen/vue-element-admin/pull/2939\n//     } else {\n//       // determine whether the user has obtained his permission roles through getInfo\n//       const hasRoles = store.getters.roles && store.getters.roles.length > 0\n//       if (hasRoles) {\n//         next()\n//       } else {\n//         try {\n//           // get user info\n//           // note: roles must be a object array! such as: ['admin'] or ,['developer','editor']\n//           const { roles } = await store.dispatch('user/getInfo')\n\n//           // generate accessible routes map based on roles\n//           const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\n\n//           // dynamically add accessible routes\n//           router.addRoutes(accessRoutes)\n\n//           // hack method to ensure that addRoutes is complete\n//           // set the replace: true, so the navigation will not leave a history record\n//           next({ ...to, replace: true })\n//         } catch (error) {\n//           // remove token and go to login page to re-login\n//           await store.dispatch('user/resetToken')\n//           Message.error(error || 'Has Error')\n//           next(`/login?redirect=${to.path}`)\n//           NProgress.done()\n//         }\n//       }\n//     }\n//   } else {\n//     /* has no token*/\n\n//     if (whiteList.indexOf(to.path) !== -1) {\n//       // in the free login whitelist, go directly\n//       next()\n//     } else {\n//       // other pages that do not have permission to access are redirected to the login page.\n//       next(`/login?redirect=${to.path}`)\n//       NProgress.done()\n//     }\n//   }\n// })\n\n// router.afterEach(() => {\n//   // finish progress bar\n//   NProgress.done()\n// })\n"]}]}