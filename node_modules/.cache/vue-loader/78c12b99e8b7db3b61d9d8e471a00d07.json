{"remainingRequest":"C:\\Users\\windows\\Project\\ihrm\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\windows\\Project\\ihrm\\src\\views\\departments\\components\\add-dept.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\windows\\Project\\ihrm\\src\\views\\departments\\components\\add-dept.vue","mtime":1616584618854},{"path":"C:\\Users\\windows\\Project\\ihrm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\Project\\ihrm\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\windows\\Project\\ihrm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\Project\\ihrm\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyDov5nph4zlj6/ku6Xlr7zlhaXlhbbku5bmlofku7bvvIjmr5TlpoLvvJrnu4Tku7bvvIzlt6Xlhbdqc++8jOesrOS4ieaWueaPkuS7tmpz77yManNvbuaWh+S7tu+8jOWbvueJh+aWh+S7tuetieetie+8iQ0KaW1wb3J0IHthZGREZXBhcnRtZW50cywgZ2V0RGVwYXJ0bWVudHN9IGZyb20gJ0AvYXBpL2RlcGFydG1lbnRzLmpzJw0KaW1wb3J0IHtnZXRFbXBsb3llZXNMaXN0fSBmcm9tICdAL2FwaS9lbXBsb3llZXMnDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdhZGREZXB0JywNCiAgY29tcG9uZW50czoge30sDQogIG1vZGVsOiB7fSwgLy8g5a6a5LmJ5bGe5oCnDQogIHByb3BzOiB7DQogICAgc2hvd0RpYWxvZzogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgfSwNCiAgICB0cmVlTm9kZTogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgZGVmYXVsdDogbnVsbA0KICAgIH0NCiAgfSwNCiAgZGF0YSAoKSB7DQogICAgY29uc3QgY2hlY2tOYW1lUmVwZWF0ID0gYXN5bmMgKHJ1bGUsdmFsdWUsY2FsbGJhY2spID0+IHsNCiAgICAgIGNvbnN0IHsgZGVwdHMgfSA9IGF3YWl0IGdldERlcGFydG1lbnRzKCkNCiAgICAgIGNvbnN0IGlzUmVwZWF0ID0gZGVwdHMuZmlsdGVyKCBlbGVtZW50ID0+IHsNCiAgICAgICAgcmV0dXJuIGVsZW1lbnQucGlkID09dGhpcy50cmVlTm9kZS5waWQNCiAgICAgIH0pLnNvbWUoaXRlbSA9PiB7DQogICAgICAgIHJldHVybiBpdGVtLm5hbWUgPT0gdmFsdWUNCiAgICAgIH0pDQogICAgICBpc1JlcGVhdCA/IGNhbGxiYWNrKG5ldyBFcnJvcihg5ZCM57qn6YOo6Zeo5LiL5bey5a2Y5ZyoJHt2YWx1ZX3pg6jpl6hgKSkgOiBjYWxsYmFjaygpDQogICAgfQ0KICAgIGNvbnN0IGNoZWNrQ29kZVJlcGVhdCA9IGFzeW5jIChydWxlLHZhbHVlLGNhbGxiYWNrKSA9PiB7DQogICAgICBjb25zdCB7IGRlcHRzIH0gPSBhd2FpdCBnZXREZXBhcnRtZW50cygpDQogICAgICBjb25zdCBpc1JlcGVhdCA9IGRlcHRzLnNvbWUoIGVsZW1lbnQgPT4gew0KICAgICAgICByZXR1cm4gZWxlbWVudC5jb2RlID09IHZhbHVlICYmIHZhbHVlDQogICAgICB9KQ0KICAgICAgaXNSZXBlYXQgPyBjYWxsYmFjayhuZXcgRXJyb3IoYCR7dmFsdWV96YOo6Zeo57yW56CB6YeN5aSNYCkpIDogY2FsbGJhY2soKQ0KICAgIH0NCiAgICByZXR1cm4gew0KICAgICAgZm9ybURhdGU6IHsNCiAgICAgICAgbmFtZTonJywNCiAgICAgICAgY29kZTonJywNCiAgICAgICAgbWFuYWdlcjogJycsDQogICAgICAgIGludHJvZHVjZToiIg0KICAgICAgfSwNCiAgICAgIHJ1bGVzOiB7DQogICAgICAgIG5hbWU6IFsNCiAgICAgICAgICB7cmVxdWlyZWQ6dHJ1ZSwgbWVzc2FnZTon6YOo6Zeo5ZCN56ew5LiN6IO95Li656m677yBJyx0cmlnZ2VyOidibHVyJ30sDQogICAgICAgICAge21pbjoxLG1heDo1MCxtZXNzYWdlOifplb/luqblv4XpobvlnKgxLTEwMOS4quWtl+espuS5i+mXtCcsdHJpZ2dlcjonYmx1cid9LA0KICAgICAgICAgIHt0cmlnZ2VyOidibHVyJyx2YWxpZGF0ZTpjaGVja05hbWVSZXBlYXR9DQogICAgICAgIF0sDQogICAgICAgIGNvZGU6IFsNCiAgICAgICAgICB7cmVxdWlyZWQ6dHJ1ZSwgbWVzc2FnZTon6YOo6Zeo57yW56CB5LiN6IO95Li656m677yBJyx0cmlnZ2VyOidibHVyJ30sDQogICAgICAgICAge21pbjoxLG1heDo1MCxtZXNzYWdlOifplb/luqblv4XpobvlnKgxLTEwMOS4quWtl+espuS5i+mXtCcsdHJpZ2dlcjonYmx1cid9LA0KICAgICAgICAgIHt0cmlnZ2VyOidibHVyJyx2YWxpZGF0ZTpjaGVja0NvZGVSZXBlYXR9DQogICAgICAgIF0sDQogICAgICAgIG1hbmFnZXI6IFsNCiAgICAgICAgICB7cmVxdWlyZWQ6dHJ1ZSwgbWVzc2FnZTon6YOo6Zeo566h55CG5ZGY5LiN6IO95Li656m677yBJyx0cmlnZ2VyOidibHVyJ30sDQogICAgICAgIF0sDQogICAgICAgIGludHJvZHVjZTogWw0KICAgICAgICAgIHtyZXF1aXJlZDp0cnVlLCBtZXNzYWdlOifpg6jpl6jku4vnu43kuI3og73kuLrnqbrvvIEnLHRyaWdnZXI6J2JsdXInfSwNCiAgICAgICAgICB7bWluOjEsbWF4OjEwMCxtZXNzYWdlOifplb/luqblv4XpobvlnKgxLTMwMOS4quWtl+espuS5i+mXtCcsdHJpZ2dlcjonYmx1cid9DQogICAgICAgIF0NCiAgICAgIH0sDQogICAgICBwZW9wbGVzOltdDQogICAgfQ0KICB9LA0KICBiZWZvcmVDcmVhdGUgKCkge30sIC8vIOeUn+WRveWRqOacnyAtIOWIm+W7uuS5i+WJjQ0KICBjcmVhdGVkICgpIHt9LCAvLyDnlJ/lkb3lkajmnJ8gLSDliJvlu7rlrozmiJDvvIjlj6/ku6Xorr/pl67lvZPliY10aGlz5a6e5L6L77yJDQogIGJlZm9yZU1vdW50ICgpIHt9LCAvLyDnlJ/lkb3lkajmnJ8gLSDmjILovb3kuYvliY0NCiAgbW91bnRlZCAoKSB7fSwgLy8g55Sf5ZG95ZGo5pyfIC0g5oyC6L295a6M5oiQ77yI5Y+v5Lul6K6/6ZeuRE9N5YWD57Sg77yJDQogIGNvbXB1dGVkOiB7fSwgLy8g6K6h566X5bGe5oCn77yM5Lya55uR5ZCs5L6d6LWW5bGe5oCn5YC86ZqP5LmL5Y+Y5YyWDQogIHdhdGNoOiB7fSwgLy8g55uR5o6nZGF0YeS4reeahOaVsOaNruWPmOWMlg0KICBtZXRob2RzOiB7DQogICAgLyog6I635Y+W6LSf6LSj5Lq65pWw5o2u5YiX6KGoICovDQogICAgYXN5bmMgZ2V0RW1wbG95ZWVzTGlzdCgpIHsNCiAgICAgIHRoaXMucGVvcGxlcyA9IGF3YWl0IGdldEVtcGxveWVlc0xpc3QoKQ0KICAgIH0sDQogICAgLyog5YWo5bGA5qCh6aqM6L6T5YWl5qGGICovDQogICAgYnRuT2soKSB7DQogICAgICB0aGlzLiRyZWZzLmRlcHRGb3JtLnZhbGlkYXRlKGFzeW5jIHZhbGlkYXRlID0+IHsNCiAgICAgICAgaWYodmFsaWRhdGUpIHsNCiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnRyZWVOb2RlKTsNCiAgICAgICAgICBhd2FpdCBhZGREZXBhcnRtZW50cyh7Li4udGhpcy5mb3JtRGF0ZSxwaWQ6dGhpcy50cmVlTm9kZS5pZH0pDQogICAgICAgICAgLy8g5riF6Zmk6L6T5YWl5qGG5YaF5a65DQogICAgICAgICAgdGhpcy5mb3JtRGF0ZSA9IHt9DQogICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnNob3dEaWFsb2cnLGZhbHNlKQ0KICAgICAgICAgIHRoaXMuJGVtaXQoJ2FkZERlcHRzJykNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9ICANCiAgfSwgLy8g5pa55rOV6ZuG5ZCIDQogIGJlZm9yZVVwZGF0ZSAoKSB7fSwgLy8g55Sf5ZG95ZGo5pyfIC0g5pu05paw5LmL5YmNDQogIHVwZGF0ZWQgKCkge30sIC8vIOeUn+WRveWRqOacnyAtIOabtOaWsOS5i+WQjg0KICBiZWZvcmVEZXN0cm95ICgpIHt9LCAvLyDnlJ/lkb3lkajmnJ8gLSDplIDmr4HkuYvliY0NCiAgZGVzdHJveWVkICgpIHt9LCAvLyDnlJ/lkb3lkajmnJ8gLSDplIDmr4HlrozmiJANCiAgYWN0aXZhdGVkICgpIHt9IC8vIOWmguaenOmhtemdouaciWtlZXAtYWxpdmXnvJPlrZjlip/og73vvIzov5nkuKrlh73mlbDkvJrop6blj5ENCn0NCg=="},{"version":3,"sources":["add-dept.vue"],"names":[],"mappingsfile":"add-dept.vue","sourceRoot":"src/views/departments/components","sourcesContent":["<template>\r\n  <el-dialog title=\"新增部门\" :visible=\"showDialog\" width=\"30%\" >  \r\n    <el-form :label-position=\"labelPosition\" label-width=\"100px\" :model=\"formDate\" :rules=\"rules\" ref=\"deptForm\">\r\n      <el-form-item label=\"部门名称\" prop=\"name\">\r\n        <el-input v-model=\"formDate.name\" placeholder=\"1-50字符\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"部门编码\"  prop=\"code\">\r\n        <el-input v-model=\"formDate.code\" placeholder=\"1-50字符\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"部门负责人\"  prop=\"manager\">\r\n        <el-select v-model=\"formDate.manager\" placeholder=\"请选择\" style=\"width: 100%;\" @focus=\"getEmployeesList\">\r\n          <el-option v-for=\"item in peoples\" :key=\"item.id\" :label=\"item.username\" :value=\"item.username\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"部门介绍\"  prop=\"introduce\">\r\n         <el-input type=\"textarea\" v-model=\"formDate.introduce\" placeholder=\"1-300字符\" rows=\"3\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <!-- 确定提交 -->\r\n    <el-row type=\"flex\" justify=\"center\" slot='footer'>\r\n      <el-col :span=\"6\">\r\n        <el-button  size=\"small\">取消</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"btnOk\">确定</el-button>\r\n      </el-col>\r\n    </el-row>\r\n    <!-- /确定提交 -->\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\n// 这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\r\nimport {addDepartments, getDepartments} from '@/api/departments.js'\r\nimport {getEmployeesList} from '@/api/employees'\r\nexport default {\r\n  name: 'addDept',\r\n  components: {},\r\n  model: {}, // 定义属性\r\n  props: {\r\n    showDialog: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    treeNode: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data () {\r\n    const checkNameRepeat = async (rule,value,callback) => {\r\n      const { depts } = await getDepartments()\r\n      const isRepeat = depts.filter( element => {\r\n        return element.pid ==this.treeNode.pid\r\n      }).some(item => {\r\n        return item.name == value\r\n      })\r\n      isRepeat ? callback(new Error(`同级部门下已存在${value}部门`)) : callback()\r\n    }\r\n    const checkCodeRepeat = async (rule,value,callback) => {\r\n      const { depts } = await getDepartments()\r\n      const isRepeat = depts.some( element => {\r\n        return element.code == value && value\r\n      })\r\n      isRepeat ? callback(new Error(`${value}部门编码重复`)) : callback()\r\n    }\r\n    return {\r\n      formDate: {\r\n        name:'',\r\n        code:'',\r\n        manager: '',\r\n        introduce:\"\"\r\n      },\r\n      rules: {\r\n        name: [\r\n          {required:true, message:'部门名称不能为空！',trigger:'blur'},\r\n          {min:1,max:50,message:'长度必须在1-100个字符之间',trigger:'blur'},\r\n          {trigger:'blur',validate:checkNameRepeat}\r\n        ],\r\n        code: [\r\n          {required:true, message:'部门编码不能为空！',trigger:'blur'},\r\n          {min:1,max:50,message:'长度必须在1-100个字符之间',trigger:'blur'},\r\n          {trigger:'blur',validate:checkCodeRepeat}\r\n        ],\r\n        manager: [\r\n          {required:true, message:'部门管理员不能为空！',trigger:'blur'},\r\n        ],\r\n        introduce: [\r\n          {required:true, message:'部门介绍不能为空！',trigger:'blur'},\r\n          {min:1,max:100,message:'长度必须在1-300个字符之间',trigger:'blur'}\r\n        ]\r\n      },\r\n      peoples:[]\r\n    }\r\n  },\r\n  beforeCreate () {}, // 生命周期 - 创建之前\r\n  created () {}, // 生命周期 - 创建完成（可以访问当前this实例）\r\n  beforeMount () {}, // 生命周期 - 挂载之前\r\n  mounted () {}, // 生命周期 - 挂载完成（可以访问DOM元素）\r\n  computed: {}, // 计算属性，会监听依赖属性值随之变化\r\n  watch: {}, // 监控data中的数据变化\r\n  methods: {\r\n    /* 获取负责人数据列表 */\r\n    async getEmployeesList() {\r\n      this.peoples = await getEmployeesList()\r\n    },\r\n    /* 全局校验输入框 */\r\n    btnOk() {\r\n      this.$refs.deptForm.validate(async validate => {\r\n        if(validate) {\r\n          console.log(this.treeNode);\r\n          await addDepartments({...this.formDate,pid:this.treeNode.id})\r\n          // 清除输入框内容\r\n          this.formDate = {}\r\n          this.$emit('update:showDialog',false)\r\n          this.$emit('addDepts')\r\n        }\r\n      })\r\n    }  \r\n  }, // 方法集合\r\n  beforeUpdate () {}, // 生命周期 - 更新之前\r\n  updated () {}, // 生命周期 - 更新之后\r\n  beforeDestroy () {}, // 生命周期 - 销毁之前\r\n  destroyed () {}, // 生命周期 - 销毁完成\r\n  activated () {} // 如果页面有keep-alive缓存功能，这个函数会触发\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n</style>\r\n"]}]}