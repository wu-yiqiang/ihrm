{"remainingRequest":"C:\\Users\\windows\\project\\ihrm\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\windows\\project\\ihrm\\src\\views\\employees\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\windows\\project\\ihrm\\src\\views\\employees\\index.vue","mtime":1616898990605},{"path":"C:\\Users\\windows\\project\\ihrm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\project\\ihrm\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\windows\\project\\ihrm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\project\\ihrm\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQge2dldEVtcGxveWVlc0xpc3RzLGRlbGV0ZUVtcGxveWVlfSBmcm9tICdAL2FwaS9lbXBsb3llZXMnDQppbXBvcnQgRW1wbG95ZWVFbnVtIGZyb20gJ0AvYXBpL2NvbnN0YW50L2VtcGxveWVlcycNCmltcG9ydCBhZGRFbXBsb3llZSBmcm9tICIuL2NvbXBvbmVudHMvYWRkLWVtcGxveWVlIg0KaW1wb3J0IHsgZm9ybWF0RGF0ZSwgZm9ybWF0VGltZSB9IGZyb20gJ0AvZmlsdGVycycNCmV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgcGFnZTp7DQogICAgICAgIHBhZ2U6MSwNCiAgICAgICAgc2l6ZToxMCwNCiAgICAgICAgdG90YWw6MCwNCiAgICAgIH0sDQogICAgICBsb2Rpbmc6IGZhbHNlLA0KICAgICAgbGlzdCA6W10sDQogICAgICBzaG93RGlhbG9nOiBmYWxzZQ0KICAgIH0NCiAgfSwNCiAgY29tcG9uZW50czogew0KICAgIGFkZEVtcGxveWVlDQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5nZXRFbXBsb3llZXNMaXN0cygpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBnZXRFbXBsb3llZXNMaXN0cygpIHsNCiAgICAgIHRoaXMubG9kaW5nID0gdHJ1ZQ0KICAgICAgY29uc3Qge3RvdGFsLHJvd3N9ID0gYXdhaXQgZ2V0RW1wbG95ZWVzTGlzdHModGhpcy5wYWdlKQ0KICAgICAgdGhpcy5saXN0ID0gcm93cw0KICAgICAgdGhpcy5wYWdlLnRvdGFsID0gdG90YWwNCiAgICAgIHRoaXMubG9kaW5nID0gZmFsc2UNCiAgICB9LA0KICAgIC8qIOWIhumhteaTjeS9nCAqLw0KICAgIGNoYW5nZVBhZ2UobmV3UGFnZSkgew0KICAgICAgdGhpcy5wYWdlLnBhZ2UgPSBuZXdQYWdlDQogICAgICB0aGlzLmdldEVtcGxveWVlc0xpc3RzKCkNCiAgICB9LA0KICAgIC8qIOagvOW8j+WMluiBmOeUqOWtl+autSAqLw0KICAgIGZvbWF0RW1wbG95bWVudChyb3csY29sdW1uLGNlbGxWYWx1ZSxpbmRleCkgew0KICAgICAgY29uc3Qgb2JqID0gRW1wbG95ZWVFbnVtLmhpcmVUeXBlLmZpbmQoaXRlbSA9PiBpdGVtLmlkID09IGNlbGxWYWx1ZSkNCiAgICAgIHJldHVybiBvYmogPyBvYmoudmFsdWUgOiAn5pyq55+lJw0KICAgIH0sDQogICAgLyog5Yig6Zmk5ZGY5belICovDQogICAgZGVsZXRlRW1wbG95ZWUoaWQpIHsNCiAgICAgIHRoaXMuJGNvbmZpcm0oJ+atpOaTjeS9nOWwhuawuOS5heWIoOmZpOivpeWRmOW3pSwg5piv5ZCm57un57utPycsICfmj5DnpLonLCB7DQogICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLA0KICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLA0KICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJw0KICAgICAgICB9KS50aGVuKGFzeW5jICgpID0+IHsNCiAgICAgICAgICBhd2FpdCBkZWxldGVFbXBsb3llZShpZCkNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywNCiAgICAgICAgICAgIG1lc3NhZ2U6ICfliKDpmaTmiJDlip8hJw0KICAgICAgICAgIH0pOw0KICAgICAgICAgIHRoaXMuZ2V0RW1wbG95ZWVzTGlzdHMoKQ0KICAgICAgICB9KS5jYXRjaCgoKSA9PiB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7DQogICAgICAgICAgICB0eXBlOiAnaW5mbycsDQogICAgICAgICAgICBtZXNzYWdlOiAn5bey5Y+W5raI5Yig6ZmkJw0KICAgICAgICAgIH0pOyAgICAgICAgICANCiAgICAgIH0pOw0KICAgIH0sDQogICAgLyog5a+85Ye65ZGY5bel5pWw5o2uICovDQogICAgZXhwb3J0RGF0ZSAoKSB7DQogICAgICBpbXBvcnQoIkAvdmVuZG9yL0V4cG9ydDJFeGNlbCIpLnRoZW4oYXN5bmMgZXhjZWwgPT4gew0KICAgICAgICBjb25zdCB7cm93c30gPSBhd2FpdCBnZXRFbXBsb3llZXNMaXN0cyh7cGFnZToxLHNpemU6IHRoaXMucGFnZS50b3RhbH0pDQoNCiAgICAgICAgdmFyIGhlYWRlcnMgPSB7DQogICAgICAgICAgJ+aJi+acuuWPtyc6ICdtb2JpbGUnLA0KICAgICAgICAgICflp5PlkI0nOiAndXNlcm5hbWUnLA0KICAgICAgICAgICflhaXogYzml6XmnJ8nOiAndGltZU9mRW50cnknLA0KICAgICAgICAgICfogZjnlKjlvaLlvI8nOiAnZm9ybU9mRW1wbG95bWVudCcsDQogICAgICAgICAgJ+i9rOato+aXpeacnyc6ICdjb3JyZWN0aW9uVGltZScsDQogICAgICAgICAgJ+W3peWPtyc6ICd3b3JrTnVtYmVyJywNCiAgICAgICAgICAn6YOo6ZeoJzogJ2RlcGFydG1lbnROYW1lJw0KICAgICAgICB9DQogICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLmZvcm1hdEpzb24oaGVhZGVycyxyb3dzKQ0KICAgICAgICBleGNlbC5leHBvcnRfanNvbl90b19leGNlbCh7ICANCiAgICAgICAgICBoZWFkZXI6IE9iamVjdC5rZXlzKGhlYWRlcnMpLA0KICAgICAgICAgIGRhdGE6IGRhdGEsDQogICAgICAgICAgZmlsZW5hbWU6J+WRmOW3peW3pei1hOihqCcNCiAgICAgICAgfSkNCiAgICAgIH0pDQogICAgfSwNCiAgICAvKiDmoLzlvI/ljJbmlbDmja4gKi8NCiAgICBmb3JtYXRKc29uKGhlYWRlcnMscm93cykgew0KICAgICAgcmV0dXJuIHJvd3MubWFwKGl0ZW0gPT4gew0KICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMoaGVhZGVycykubWFwKCBrZXkgPT4gew0KICAgICAgICAgIGlmIChoZWFkZXJzW2tleV0gJiYgKGhlYWRlcnNba2V5XSA9PSAndGltZU9mRW50cnknIHx8IGhlYWRlcnNba2V5XSA9PSAnY29ycmVjdGlvblRpbWUnKSkgew0KICAgICAgICAgICAgcmV0dXJuIGZvcm1hdERhdGUoaXRlbVtoZWFkZXJzW2tleV1dKQ0KICAgICAgICAgIH0gZWxzZSBpZiAoaGVhZGVyc1trZXldID09ICdmb3JtT2ZFbXBsb3ltZW50Jykgew0KICAgICAgICAgICAgY29uc3QgZmxhZyA9IEVtcGxveWVlRW51bS5oaXJlVHlwZS5maW5kKG9iaiA9PiB7DQogICAgICAgICAgICAgIHJldHVybiBvYmouaWQgPT0gaXRlbVtoZWFkZXJzW2tleV1dDQogICAgICAgICAgICB9KQ0KDQogICAgICAgICAgICByZXR1cm4gZmxhZz8gZmxhZy52YWx1ZSA6ICfmnKrnn6UnDQogICAgICAgICAgfSANCiAgICAgICAgICByZXR1cm4gaXRlbVtoZWFkZXJzW2tleV1dDQogICAgICAgIH0pDQogICAgICB9KQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/employees","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"app-container\">\r\n      <pageTools :show-before=\"true\">\r\n        <template v-slot:before>\r\n          <span slot='before'>总共{{page.total}}条记录</span>\r\n        </template>\r\n\r\n        <template v-slot:after>\r\n          <el-button size=\"middle\" type=\"success\" @click=\"$router.push('/import')\">导入</el-button>\r\n          <el-button size=\"middle\" type=\"danger\" @click=\"exportDate\">导出</el-button>\r\n          <el-button size=\"middle\" type=\"primary\" @click=\"showDialog = true\">新增员工</el-button>\r\n        </template>\r\n      </pageTools>\r\n      <!-- 放置表格组件 -->\r\n      <el-card>\r\n        <el-table border v-loading=\"loding\" :data=list>\r\n          <el-table-column type=\"index\" label=\"序号\" sortable=\"\" align=\"center\"/>\r\n          <el-table-column label=\"姓名\" sortable=\"\" align=\"center\" prop=\"username\"/>\r\n          <el-table-column label=\"工号\" sortable=\"\" align=\"center\" prop=\"id\"/>\r\n          <el-table-column label=\"聘用形式\" sortable=\"\" align=\"center\" prop=\"formOfEmployment\" :formatter=\"fomatEmployment\"/>\r\n          <el-table-column label=\"部门\" sortable=\"\" align=\"center\" prop=\"departmentName\"/>\r\n          <el-table-column label=\"入职时间\" sortable=\"\" align=\"center\" >\r\n            <template slot-scope=\"scoped\">\r\n              {{scoped.row.timeOfEntry | formatDate}}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"账户状态\" sortable=\"\" align=\"center\" prop=\"enableState\">\r\n            <template slot-scope=\"scoped\">\r\n              <el-switch :value=\"scoped.row.enableState === 1\" active-color=\"#13ce66\" inactive-color=\"#ff4949\">\r\n              </el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" sortable=\"\" fixed=\"right\" width=\"280\" align=\"center\">\r\n            <template slot-scope=\"scoped\">\r\n              <el-button type=\"text\" size=\"small\">查看</el-button>\r\n              <el-button type=\"text\" size=\"small\">转正</el-button>\r\n              <el-button type=\"text\" size=\"small\">调岗</el-button>\r\n              <el-button type=\"text\" size=\"small\">离职</el-button>\r\n              <el-button type=\"text\" size=\"small\">角色</el-button>\r\n              <el-button type=\"text\" size=\"small\" @click=\"deleteEmployee(scoped.row.id)\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!-- 分页组件 -->\r\n        <el-row type=\"flex\" justify=\"center\" align=\"middle\" style=\"height: 60px\">\r\n          <el-pagination layout=\"prev, pager, next\" :total=\"page.total\" :page-size=\"page.size\" :current-page=\"page.page\" @current-change=\"changePage\"/>\r\n        </el-row>\r\n        <!-- /分页组件 -->\r\n      </el-card>\r\n      <!-- 放置表格组件 -->\r\n    </div>\r\n    <!-- 放置弹层 -->\r\n    <addEmployee :showDialog.sync=\"showDialog\"></addEmployee>\r\n    <!-- /放置弹层 -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {getEmployeesLists,deleteEmployee} from '@/api/employees'\r\nimport EmployeeEnum from '@/api/constant/employees'\r\nimport addEmployee from \"./components/add-employee\"\r\nimport { formatDate, formatTime } from '@/filters'\r\nexport default {\r\n  data() {\r\n    return {\r\n      page:{\r\n        page:1,\r\n        size:10,\r\n        total:0,\r\n      },\r\n      loding: false,\r\n      list :[],\r\n      showDialog: false\r\n    }\r\n  },\r\n  components: {\r\n    addEmployee\r\n  },\r\n  created() {\r\n    this.getEmployeesLists()\r\n  },\r\n  methods: {\r\n    async getEmployeesLists() {\r\n      this.loding = true\r\n      const {total,rows} = await getEmployeesLists(this.page)\r\n      this.list = rows\r\n      this.page.total = total\r\n      this.loding = false\r\n    },\r\n    /* 分页操作 */\r\n    changePage(newPage) {\r\n      this.page.page = newPage\r\n      this.getEmployeesLists()\r\n    },\r\n    /* 格式化聘用字段 */\r\n    fomatEmployment(row,column,cellValue,index) {\r\n      const obj = EmployeeEnum.hireType.find(item => item.id == cellValue)\r\n      return obj ? obj.value : '未知'\r\n    },\r\n    /* 删除员工 */\r\n    deleteEmployee(id) {\r\n      this.$confirm('此操作将永久删除该员工, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(async () => {\r\n          await deleteEmployee(id)\r\n          this.$message({\r\n            type: 'success',\r\n            message: '删除成功!'\r\n          });\r\n          this.getEmployeesLists()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          });          \r\n      });\r\n    },\r\n    /* 导出员工数据 */\r\n    exportDate () {\r\n      import(\"@/vendor/Export2Excel\").then(async excel => {\r\n        const {rows} = await getEmployeesLists({page:1,size: this.page.total})\r\n\r\n        var headers = {\r\n          '手机号': 'mobile',\r\n          '姓名': 'username',\r\n          '入职日期': 'timeOfEntry',\r\n          '聘用形式': 'formOfEmployment',\r\n          '转正日期': 'correctionTime',\r\n          '工号': 'workNumber',\r\n          '部门': 'departmentName'\r\n        }\r\n        const data = this.formatJson(headers,rows)\r\n        excel.export_json_to_excel({  \r\n          header: Object.keys(headers),\r\n          data: data,\r\n          filename:'员工工资表'\r\n        })\r\n      })\r\n    },\r\n    /* 格式化数据 */\r\n    formatJson(headers,rows) {\r\n      return rows.map(item => {\r\n        return Object.keys(headers).map( key => {\r\n          if (headers[key] && (headers[key] == 'timeOfEntry' || headers[key] == 'correctionTime')) {\r\n            return formatDate(item[headers[key]])\r\n          } else if (headers[key] == 'formOfEmployment') {\r\n            const flag = EmployeeEnum.hireType.find(obj => {\r\n              return obj.id == item[headers[key]]\r\n            })\r\n\r\n            return flag? flag.value : '未知'\r\n          } \r\n          return item[headers[key]]\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}